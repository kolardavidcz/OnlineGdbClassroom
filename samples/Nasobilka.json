{
  "assignment": {
    "enable_auto_mark_complete": null,
    "enable_grade": 1,
    "testcases": [
      {
        "output": "Rozsah:\n   |  10   9   8   7   6   5   4   3   2   1\n---+----------------------------------------\n  1|  10   9   8   7   6   5   4   3   2   1\n  2|  20  18  16  14  12  10   8   6   4\n  3|  30  27  24  21  18  15  12   9\n  4|  40  36  32  28  24  20  16\n  5|  50  45  40  35  30  25\n  6|  60  54  48  42  36\n  7|  70  63  56  49\n  8|  80  72  64\n  9|  90  81\n 10| 100\n",
        "input": "10\n",
        "grade_point": 1,
        "visibility": 2,
        "name": "testNumber: 0",
        "match_type": "S"
      },
      {
        "output": "Rozsah:\n  |  8  7  6  5  4  3  2  1\n--+------------------------\n 1|  8  7  6  5  4  3  2  1\n 2| 16 14 12 10  8  6  4\n 3| 24 21 18 15 12  9\n 4| 32 28 24 20 16\n 5| 40 35 30 25\n 6| 48 42 36\n 7| 56 49\n 8| 64\n",
        "input": "8\n",
        "grade_point": 1,
        "visibility": 2,
        "name": "testNumber: 1",
        "match_type": "S"
      },
      {
        "output": "Rozsah:\n    |   32   31   30   29   28   27   26   25   24   23   22   21   20   19   18   17   16   15   14   13   12   11   10    9    8    7    6    5    4    3    2    1\n----+----------------------------------------------------------------------------------------------------------------------------------------------------------------\n   1|   32   31   30   29   28   27   26   25   24   23   22   21   20   19   18   17   16   15   14   13   12   11   10    9    8    7    6    5    4    3    2    1\n   2|   64   62   60   58   56   54   52   50   48   46   44   42   40   38   36   34   32   30   28   26   24   22   20   18   16   14   12   10    8    6    4\n   3|   96   93   90   87   84   81   78   75   72   69   66   63   60   57   54   51   48   45   42   39   36   33   30   27   24   21   18   15   12    9\n   4|  128  124  120  116  112  108  104  100   96   92   88   84   80   76   72   68   64   60   56   52   48   44   40   36   32   28   24   20   16\n   5|  160  155  150  145  140  135  130  125  120  115  110  105  100   95   90   85   80   75   70   65   60   55   50   45   40   35   30   25\n   6|  192  186  180  174  168  162  156  150  144  138  132  126  120  114  108  102   96   90   84   78   72   66   60   54   48   42   36\n   7|  224  217  210  203  196  189  182  175  168  161  154  147  140  133  126  119  112  105   98   91   84   77   70   63   56   49\n   8|  256  248  240  232  224  216  208  200  192  184  176  168  160  152  144  136  128  120  112  104   96   88   80   72   64\n   9|  288  279  270  261  252  243  234  225  216  207  198  189  180  171  162  153  144  135  126  117  108   99   90   81\n  10|  320  310  300  290  280  270  260  250  240  230  220  210  200  190  180  170  160  150  140  130  120  110  100\n  11|  352  341  330  319  308  297  286  275  264  253  242  231  220  209  198  187  176  165  154  143  132  121\n  12|  384  372  360  348  336  324  312  300  288  276  264  252  240  228  216  204  192  180  168  156  144\n  13|  416  403  390  377  364  351  338  325  312  299  286  273  260  247  234  221  208  195  182  169\n  14|  448  434  420  406  392  378  364  350  336  322  308  294  280  266  252  238  224  210  196\n  15|  480  465  450  435  420  405  390  375  360  345  330  315  300  285  270  255  240  225\n  16|  512  496  480  464  448  432  416  400  384  368  352  336  320  304  288  272  256\n  17|  544  527  510  493  476  459  442  425  408  391  374  357  340  323  306  289\n  18|  576  558  540  522  504  486  468  450  432  414  396  378  360  342  324\n  19|  608  589  570  551  532  513  494  475  456  437  418  399  380  361\n  20|  640  620  600  580  560  540  520  500  480  460  440  420  400\n  21|  672  651  630  609  588  567  546  525  504  483  462  441\n  22|  704  682  660  638  616  594  572  550  528  506  484\n  23|  736  713  690  667  644  621  598  575  552  529\n  24|  768  744  720  696  672  648  624  600  576\n  25|  800  775  750  725  700  675  650  625\n  26|  832  806  780  754  728  702  676\n  27|  864  837  810  783  756  729\n  28|  896  868  840  812  784\n  29|  928  899  870  841\n  30|  960  930  900\n  31|  992  961\n  32| 1024\n",
        "input": "32\n",
        "grade_point": 1,
        "visibility": 2,
        "name": "testNumber: 2",
        "match_type": "S"
      },
      {
        "output": "Rozsah:\nNespravny vstup.\n",
        "input": "asdf\n",
        "grade_point": 1,
        "visibility": 2,
        "name": "testNumber: 3",
        "match_type": "S"
      }
    ],
    "language": "c++",
    "title": "Násobilka",
    "code_template": "[{\"name\":\"main.cpp\",\"content\":\"\",\"readonly_ranges\":[]}]",
    "content": "<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\">Úkolem je realizovat program, který zobrazí tabulku pro násobilku.<\/span><\/p>\n<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\">Vstupem programu je celé číslo - mez&nbsp;<tt>n<\/tt>.<\/span><\/p>\n<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\">Výstupem programu je tabulka násobilky v rozsahu&nbsp;<tt>1x1<\/tt>&nbsp;až&nbsp;<tt>n x n<\/tt>. Tabulka je zobrazena bez duplicitních hodnot, tedy v trojúhelníkové podobě. Všechny sloupce mají stejnou šířku, šířka je dána počtem číslic v největším součinu v tabulce, zvětšeným o 1. Za posledním číslem na řádce následuje odřádkování, tedy na koncích řádky nejsou žádné bílé znaky navíc.<\/span><\/p>\n<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\">Pokud je vstup neplatný, program to musí detekovat a zobrazit chybové hlášení. Chybové hlášení zobrazujte na standardní výstup (ne na chybový výstup). Za chybu považujte:<\/span><\/p>\n<ul style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n <li><span style=\"background-color: rgb(255, 255, 255);\">na vstupu není platné celé číslo,<\/span><\/li>\n <li><span style=\"background-color: rgb(255, 255, 255);\">číslo na vstupu je záporné nebo nulové.<\/span><\/li>\n<\/ul>\n<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><strong style=\"background-color: rgb(255, 255, 255);\">Ukázka práce programu:<\/strong><\/p>\n<hr style=\"height: 0px; border-style: solid; border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(204, 204, 204); border-right-width: 0px; border-left-width: 0px; font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n<pre style=\"font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\"><b>Rozsah:<\/b>\n10\n<b>   |  10   9   8   7   6   5   4   3   2   1<\/b>\n<b>---+----------------------------------------<\/b>\n<b>  1|  10   9   8   7   6   5   4   3   2   1<\/b>\n<b>  2|  20  18  16  14  12  10   8   6   4<\/b>\n<b>  3|  30  27  24  21  18  15  12   9<\/b>\n<b>  4|  40  36  32  28  24  20  16<\/b>\n<b>  5|  50  45  40  35  30  25<\/b>\n<b>  6|  60  54  48  42  36<\/b>\n<b>  7|  70  63  56  49<\/b>\n<b>  8|  80  72  64<\/b>\n<b>  9|  90  81<\/b>\n<b> 10| 100<\/b>\n<\/span><\/pre>\n<hr style=\"height: 0px; border-style: solid; border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(204, 204, 204); border-right-width: 0px; border-left-width: 0px; font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n<pre style=\"font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\"><b>Rozsah:<\/b>\n8\n<b>  |  8  7  6  5  4  3  2  1<\/b>\n<b>--+------------------------<\/b>\n<b> 1|  8  7  6  5  4  3  2  1<\/b>\n<b> 2| 16 14 12 10  8  6  4<\/b>\n<b> 3| 24 21 18 15 12  9<\/b>\n<b> 4| 32 28 24 20 16<\/b>\n<b> 5| 40 35 30 25<\/b>\n<b> 6| 48 42 36<\/b>\n<b> 7| 56 49<\/b>\n<b> 8| 64<\/b>\n<\/span><\/pre>\n<hr style=\"height: 0px; border-style: solid; border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(204, 204, 204); border-right-width: 0px; border-left-width: 0px; font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n<pre style=\"font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\"><b>Rozsah:<\/b>\n32\n<b>    |   32   31   30   29   28   27   26   25   24   23   22   21   20   19   18   17   16   15   14   13   12   11   10    9    8    7    6    5    4    3    2    1<\/b>\n<b>----+----------------------------------------------------------------------------------------------------------------------------------------------------------------<\/b>\n<b>   1|   32   31   30   29   28   27   26   25   24   23   22   21   20   19   18   17   16   15   14   13   12   11   10    9    8    7    6    5    4    3    2    1<\/b>\n<b>   2|   64   62   60   58   56   54   52   50   48   46   44   42   40   38   36   34   32   30   28   26   24   22   20   18   16   14   12   10    8    6    4<\/b>\n<b>   3|   96   93   90   87   84   81   78   75   72   69   66   63   60   57   54   51   48   45   42   39   36   33   30   27   24   21   18   15   12    9<\/b>\n<b>   4|  128  124  120  116  112  108  104  100   96   92   88   84   80   76   72   68   64   60   56   52   48   44   40   36   32   28   24   20   16<\/b>\n<b>   5|  160  155  150  145  140  135  130  125  120  115  110  105  100   95   90   85   80   75   70   65   60   55   50   45   40   35   30   25<\/b>\n<b>   6|  192  186  180  174  168  162  156  150  144  138  132  126  120  114  108  102   96   90   84   78   72   66   60   54   48   42   36<\/b>\n<b>   7|  224  217  210  203  196  189  182  175  168  161  154  147  140  133  126  119  112  105   98   91   84   77   70   63   56   49<\/b>\n<b>   8|  256  248  240  232  224  216  208  200  192  184  176  168  160  152  144  136  128  120  112  104   96   88   80   72   64<\/b>\n<b>   9|  288  279  270  261  252  243  234  225  216  207  198  189  180  171  162  153  144  135  126  117  108   99   90   81<\/b>\n<b>  10|  320  310  300  290  280  270  260  250  240  230  220  210  200  190  180  170  160  150  140  130  120  110  100<\/b>\n<b>  11|  352  341  330  319  308  297  286  275  264  253  242  231  220  209  198  187  176  165  154  143  132  121<\/b>\n<b>  12|  384  372  360  348  336  324  312  300  288  276  264  252  240  228  216  204  192  180  168  156  144<\/b>\n<b>  13|  416  403  390  377  364  351  338  325  312  299  286  273  260  247  234  221  208  195  182  169<\/b>\n<b>  14|  448  434  420  406  392  378  364  350  336  322  308  294  280  266  252  238  224  210  196<\/b>\n<b>  15|  480  465  450  435  420  405  390  375  360  345  330  315  300  285  270  255  240  225<\/b>\n<b>  16|  512  496  480  464  448  432  416  400  384  368  352  336  320  304  288  272  256<\/b>\n<b>  17|  544  527  510  493  476  459  442  425  408  391  374  357  340  323  306  289<\/b>\n<b>  18|  576  558  540  522  504  486  468  450  432  414  396  378  360  342  324<\/b>\n<b>  19|  608  589  570  551  532  513  494  475  456  437  418  399  380  361<\/b>\n<b>  20|  640  620  600  580  560  540  520  500  480  460  440  420  400<\/b>\n<b>  21|  672  651  630  609  588  567  546  525  504  483  462  441<\/b>\n<b>  22|  704  682  660  638  616  594  572  550  528  506  484<\/b>\n<b>  23|  736  713  690  667  644  621  598  575  552  529<\/b>\n<b>  24|  768  744  720  696  672  648  624  600  576<\/b>\n<b>  25|  800  775  750  725  700  675  650  625<\/b>\n<b>  26|  832  806  780  754  728  702  676<\/b>\n<b>  27|  864  837  810  783  756  729<\/b>\n<b>  28|  896  868  840  812  784<\/b>\n<b>  29|  928  899  870  841<\/b>\n<b>  30|  960  930  900<\/b>\n<b>  31|  992  961<\/b>\n<b>  32| 1024<\/b>\n<\/span><\/pre>\n<hr style=\"height: 0px; border-style: solid; border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(204, 204, 204); border-right-width: 0px; border-left-width: 0px; font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n<pre style=\"font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><span style=\"background-color: rgb(255, 255, 255);\"><b>Rozsah:<\/b>\nasdf\n<b>Nespravny vstup.<\/b>\n<\/span><\/pre>\n<hr style=\"height: 0px; border-style: solid; border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(204, 204, 204); border-right-width: 0px; border-left-width: 0px; font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n<p style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\"><strong style=\"background-color: rgb(255, 255, 255);\">Poznámky:<\/strong><\/p>\n<ul style=\"font-family: Tahoma; font-size: 12px; font-variant-ligatures: normal; orphans: 2; widows: 2; text-decoration-thickness: initial;\">\n <li><span style=\"background-color: rgb(255, 255, 255);\">Ukázkové běhy zachycují očekávané výpisy Vašeho programu (tučné písmo) a vstupy zadané uživatelem (základní písmo). Zvýraznění tučným písmem je použité pouze zde na stránce zadání, aby byl výpis lépe čitelný. Váš program má za úkol zobrazit text bez zvýrazňování (bez HTML markupu).<\/span><\/li>\n <li><span style=\"background-color: rgb(255, 255, 255);\">Znak odřádkování (\\n) je i za poslední řádkou výstupu (i za případným chybovým hlášením).<\/span><\/li>\n <li><span style=\"background-color: rgb(255, 255, 255);\">Při programování si dejte pozor na přesnou podobu výpisů. Výstup Vašeho programu kontroluje stroj, který požaduje přesnou shodu výstupů Vašeho programu s výstupy referenčními. Za chybu je považováno, pokud se výpis liší. I chybějící nebo přebývající mezera/odřádkování je považováno za chybu.<\/span><\/li>\n <li><span style=\"background-color: rgb(255, 255, 255);\">HINT: v tomto příkladu se hodí výstupní konverze<\/span><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;<\/span><tt style=\"background-color: rgb(255, 255, 255);\">%*d<\/tt><span style=\"background-color: rgb(255, 255, 255);\">.<\/span><\/li>\n<\/ul>",
    "modal_solution": "[{\"name\":\"main.cpp\",\"content\":\"\",\"readonly_ranges\":[]}]",
    "editor_file_upload": 1,
    "eval_method": "auto_grade",
    "enable_late_submission": 1,
    "autolock": 0,
    "testcase_visible": 0,
    "code_template_readonly_ranges": null,
    "editor_copy_paste": 1
  },
  "version": 1
}